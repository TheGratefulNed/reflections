How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It provided a simple, side-by-side comparison of the files with notation of which lines differed between the two.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It can help you see if there are similar types of errors or changes that you make consistently.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Avoids superfluous save points (potentially in the middle of typing a line/block)
		  Allows for more logical and/or consistent groupings of code
		  
	Cons: Potential to forget can lead to lost code and/or very large diffs
		  Could possibly save work that would have been lost to a power outage, etc.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Saving multiple files at once allows for a more natural sense of linked changes between the files

How can you use the commands git log and git diff to view the history of files?

    git log shows all committed changes throughout the history of the git project. git diff allows you to compare two different commits.

How might using version control make you more confident to make changes that
could break something?

    Having a system that easily allows you to roll back unwanted changes means you can experiment more readily, so long as you remember to make timely commits.

Now that you have your workspace set up, what do you want to try using Git for?

    Exploring machine learning, deep learning, AI, neural networks, etc.
