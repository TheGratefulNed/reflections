When would you want to use a remote repository rather than keeping all your work
local?

    When collaborating with others on a project or if working on the same repository from more than one location.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If you are working collaboratively, you may not want to pull down changes that others have made until
    you know if they will affect or conflict with anything you've worked on.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Clones are used to make a local copy of another repository.  Branches are for splits in code design/function
    or for testing bug fixes, updates, etc.  Forks are clones of Github content to another Github account

What is the benefit of having a copy of the last known state of the remote
stored locally?

    This design allows others to push changes to a collaborative project while still knowing where each branch
    originated.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Collaborating without Git or GitHub (or another version control software) would require exchanging copies of
    files that are updated.  Finding differences between files (and therefore merging) would be more difficult
    without either manually tracking changes or using another program to compare the files.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Generally, you would want to make changes in a separate branch only if they're substantial alterations or
    something that you are uncertain about keeping.  Making changes directly to master is simpler, since you
    don't have to worry about changing branches, merging, etc., but large or complicated additions that might
    entail multiple commits will quickly muddy your git log.  If your changes are all in master and you decide
    to remove something that you had added, you will need to redo any other changes (e.g., bug fixes) unrelated
    to the feature being removed.
